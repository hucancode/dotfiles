#! /bin/sh
time=`date +%Y-%m-%d-%I-%M`
screen=`xrandr | head -n1 | cut -d',' -f2 | tr -d '[:blank:],current'`
dir="`xdg-user-dir VIDEOS`/Screenrecorder"
file="Capture_${time}.mp4"

# notify
notify_user() {
	if [[ -e "$dir/$file" ]]; then
		dunstify -u low --replace=699 -i ~/.config/dunst/icons/video.png "Saved in $dir"
	else
		dunstify -u low --replace=699 -i ~/.config/dunst/icons/video.png "Record failed!"
	fi
}

# countdown
countdown () {
	for sec in `seq $1 -1 1`; do
		dunstify -t 1000 --replace=699 -i ~/.config/dunst/icons/timer.png "Starting in : $sec"
		sleep 1
	done
}

# capture
rec_screen() {
	countdown '3'
	if [[ "$1" == "mute" ]]; then
		ffmpeg -video_size ${screen} -framerate 25 -f x11grab -i :0.0+0,0 ${dir}/${file}
	else
		ffmpeg -video_size ${screen} -framerate 25 -f x11grab -i :0.0+0,0 -f pulse -ac 2 -i default ${dir}/${file}
	fi
	notify_user
}

rec_area() {
	get_win_data=$(slop -f "%x %y %w %h %g %i") || exit 1
	read -r X Y W H G ID < <(echo $get_win_data)
	countdown '3'
	if [[ "$1" == "mute" ]]; then
		ffmpeg -video_size ${W}x${H} -framerate 25 -f x11grab -i :0.0+${X},${Y} ${dir}/${file}
	else
		ffmpeg -video_size ${W}x${H} -framerate 25 -f x11grab -i :0.0+${X},${Y} -f pulse -ac 2 -i default ${dir}/${file}
	fi
	notify_user
}

if [[ ! -d "$dir" ]]; then
	mkdir -p "$dir"
fi

if [[ "$1" == "screen" ]]; then
	rec_screen
elif [[ "$1" == "area" ]]; then
	rec_area
elif [[ "$1" == "screen-mute" ]]; then
	rec_screen mute
elif [[ "$1" == "area-mute" ]]; then
	rec_area mute
elif [[ "$1" == "stop" ]]; then
	killall -9 ffmpeg
fi
